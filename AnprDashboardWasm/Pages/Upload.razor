@using AnprDashboardShared

@page "/upload"

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Upload Image for Detection</h5>
        </div>
        <div class="card-body">
            <InputFile OnChange="HandleFileSelected" class="form-control mb-3" />

            @if (isLoading)
            {
                <div class="d-flex align-items-center">
                    <div class="spinner-border text-primary me-2" role="status"></div>
                    <span>Processing file...</span>
                </div>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }

            @if (!string.IsNullOrEmpty(plateResult))
            {
                <div class="alert alert-success mt-3">
                    <h6>Detection Result</h6>
                    <p><b>Plate:</b> @plateResult</p>
                    <p><b>Time:</b> @detectionTime</p>
                </div>
            }

            @if (uploadedImage != null)
            {
                <div class="mt-3 text-center">
                    <img src="@uploadedImage" alt="Uploaded file preview" class="img-thumbnail" style="max-width: 400px;" />
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string UploadUrl { get; set; } = "api/detection/detect";
    [Inject] HttpClient HttpClientInstance { get; set; } = default!;

    private string? uploadedImage;
    private string? plateResult;
    private string? errorMessage;
    private DateTime? detectionTime;
    private bool isLoading = false;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        isLoading = true;
        errorMessage = null;
        plateResult = null;
        detectionTime = null;

        var file = e.File;
        using var ms = new MemoryStream();
        await file.OpenReadStream().CopyToAsync(ms);
        uploadedImage = $"data:{file.ContentType};base64,{Convert.ToBase64String(ms.ToArray())}";

        try
        {
            var content = new MultipartFormDataContent();
            content.Add(new StreamContent(new MemoryStream(ms.ToArray())), "file", file.Name);

            var response = await HttpClientInstance.PostAsync(UploadUrl, content);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<DetectionResult>();
                plateResult = result?.Plate ?? "No plate detected";
                detectionTime = result?.Timestamp;
            }
            else
            {
                errorMessage = $"Server returned {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}
